package api.webfashionstore.config;

import io.jsonwebtoken.*;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;
import org.springframework.stereotype.Component;

import java.security.Key;
import java.util.Date;

@Component
public class JwtUtil {
    private static final String SECRET_KEY = "mySecretKeymySecretKeymySecretKeymySecretKey"; // √çt nh·∫•t 32 bytes

    // üîπ L·∫•y kh√≥a k√Ω t·ª´ SECRET_KEY
    private Key getSigningKey() {
        byte[] keyBytes = SECRET_KEY.getBytes(); // ‚ö† Kh√¥ng c·∫ßn BASE64 decode
        return Keys.hmacShaKeyFor(keyBytes);
    }

    // üîπ T·∫°o token v·ªõi username v√† quy·ªÅn duy nh·∫•t
    public String generateToken(String username, String role) {
        return "Bearer "+ Jwts.builder()
                .setSubject(username)
                .claim("role", role) // Ch·ªâ l∆∞u 1 quy·ªÅn duy nh·∫•t
                .setIssuedAt(new Date())
                .setExpiration(new Date(System.currentTimeMillis() + 3600000)) // H·∫øt h·∫°n sau 1 gi·ªù
                .signWith(getSigningKey(), SignatureAlgorithm.HS256)
                .compact();
    }

    // üîπ L·∫•y username t·ª´ token
    public String extractUsername(String token) {
        return extractClaims(token).getSubject();
    }

    // üîπ L·∫•y quy·ªÅn t·ª´ token
    public String extractRole(String token) {
        System.out.println("Thinh; "+ extractClaims(token).get("role", String.class));
        return extractClaims(token).get("role", String.class);

    }

    // üîπ Tr√≠ch xu·∫•t claims t·ª´ token
    private Claims extractClaims(String token) {
        try {
            return Jwts.parserBuilder()
                    .setSigningKey(getSigningKey())
                    .build()
                    .parseClaimsJws(token)
                    .getBody();
        } catch (JwtException e) {
            throw new RuntimeException("Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!");
        }
    }
}
